# -*- coding: utf-8 -*-

import telebot
from telebot import TeleBot
import module
from telebot import types
import os
import config

token = config.token

bot = TeleBot(token)


@bot.message_handler(commands = ["start"])
def start(message):
    bot.send_message(message.from_user.id,
"–ü—Ä–∏–≤—ñ—Çüëã \n\
–Ø  –Ω–∞–¥–∑–≤–∏—á–∞–π–Ω–æ –∑—Ä—É—á–Ω–∏–π –±–æ—Ç —è–∫–∏–π –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ —É –ø–æ–≤—Å—è–∫–¥–µ–Ω–Ω–æ–º—É –∂–∏—Ç—Ç—ñ üòé\n\
–©–æ —è –≤–º—ñ—é? ü§îü§î –ù—É –¥–∏–≤–∏—Å—å:\n\
1Ô∏è‚É£ –®—É–∫–∞—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç–≤–æ—î —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è üí¨ ‚û°Ô∏è ‚ÑπÔ∏è.\n\
2Ô∏è‚É£ –í–∏–±–∏—Ä–∞—é —Ç–µ–∫—Å—Ç —ñ–∑ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ—ó —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó —Ç–∞ –≤—ñ–¥—Å–∏–ª–∞—é –π–æ–≥–æ —Ç–æ–±—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º üñºÔ∏è ‚û°Ô∏è üí¨.\n\
3Ô∏è‚É£ –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—é –Ω–∞–¥—ñ—Å–ª–∞–Ω–µ –≥–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É —Ç–µ–∫—Å—Ç —Ç–∞ –≤—ñ–¥—Å–∏–ª–∞—é –π–æ–≥–æ —Ç–æ–±—ñ üîä ‚û°Ô∏è ‚ÑπÔ∏è.\n\
4Ô∏è‚É£ –ù–∞–¥—ñ—Å–ª–∞–Ω–µ —Ç–æ–±–æ—é –≤—ñ–¥–µ–æ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—é –≤ –≥–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—é —Ç–æ–±—ñ üìπ ‚û°Ô∏è üîä.\n\
5Ô∏è‚É£ –°–∫–∞—á—É—é –≤—ñ–¥–µ–æ —ñ–∑ —é—Ç—É–±–∞. –ü—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ —Å—Å–∏–ª–∫—É –≤—ñ–¥–µ–æ —ñ —è –ø—Ä–∏—à–ª—é —Ç–æ–±—ñ –π–æ–≥–æ üîó ‚û°Ô∏è üìπ.\n\
–©–æ—Å—å –Ω–µ –∑—Ä–æ–∑—É–º—ñ–ª–æ? –ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø–∏—à–∏ –≤ —á–∞—Ç—ñ:\n\
üëâ/helpüëà\n\
—ñ –¥—ñ–∑–Ω–∞–π—Å—è –±—ñ–ª—å—à–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –º–µ–Ω–µ üòâ\n\
–Ñ —è–∫—ñ—Å—å –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó —è–∫ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –º–æ—é —Ä–æ–±–æ—Ç—É?\n\
–Ω–∞–ø–∏—à–∏ –º–æ—î–º—É –≤–ª–∞—Å–Ω–∏–∫—É: \n\
üëâ@skiffiksüëà")
    os.system("CLS")


@bot.message_handler(commands = ["help"])
def help(message):
    bot.send_message(message.from_user.id,
"–Ω–µ —Ä–æ–∑—É–º—ñ—é, —â–æ –±—É–ª–æ –Ω–µ –∑—Ä–æ–∑—É–º—ñ–ª–æ —É —Å—Ç–∞—Ä—Ç–æ–≤–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñü§°ü§° \n\
–õ–∞–¥–Ω–æ, —è–∫—â–æ —Ç–∏ –≤–∂–µ –Ω–∞–∂–∞–≤ –Ω–∞ –¥–æ–ø–æ–º–æ–≥—É —Ç–æ —Ä–æ–∑–∫–∞–∂—É —Ç–æ–±—ñ –ø–∞—Ä—É –ª–∞–π—Ñ—Ö–∞–∫—ñ–≤üòÖ: \
–¢–∏ –º–æ–∂–µ—à –ø–µ—Ä–µ—Å–∏–ª–∞—Ç–∏ —á—É–∂—ñ –≥–æ–ª–æ—Å–æ–≤—ñ –º–µ–Ω—ñ —ñ —è –±—É–¥—É —ó—Ö –ø–µ—Ä–µ–≤–æ–¥–∏—Ç–∏ —É —Ç–µ–∫—Å—Ç, (–¥—É–º–∞—é —Ü–µ –±—É–¥–µ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—å üòÅ). \n\
–¢–∞–∫–æ–∂ –Ω—ñ—Ö—Ç–æ —Ç–æ–±—ñ –Ω–µ –∑–∞–±–æ—Ä–æ–Ω—è—î –ø–µ—Ä–µ—Å–∏–ª–∞—Ç–∏ –º–æ—ó –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –º–µ–Ω—ñ –∂ üòÇüòÇ, –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —è–∫–æ–≥–æ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É \
–î–æ–ø—É—Å—Ç–∏–º –º–æ–∂–µ—à –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –º–µ–Ω—ñ —Å–∏–ª–∫—Éüîó –Ω–∞ –≤—ñ–¥–µ–æ —ñ–∑ —é—Ç—É–±–∞, —è –Ω–∞–¥—ñ—à–ª—é —Ç–æ–±—ñ –≤—ñ–¥–µ–æüìπ, \
—Ç–∏ –º–æ–∂–µ—à –ø–µ—Ä–µ—Å–ª–∞—Ç–∏ –º–µ–Ω—ñ —Ü–µ –≤—ñ–¥–µ–æüìπ —ñ –æ—Ç—Ä–∏–º–∞—î—à –≥–æ–ª–æ—Å–æ–≤–µüîä –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–∑ –Ω—å–æ–≥–æ, \
–º–æ–∂–µ—à –Ω–∞–≤—ñ—Ç—å –ø–µ—Ä–µ—Å–ª–∞—Ç–∏ –º–µ–Ω—ñ —Ü–µ –≥–æ–ª–æ—Å–æ–≤–µüîä —ñ —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à —Ç–µ–∫—Å—Çüí¨ —ñ–∑ –Ω—å–æ–≥–æ, \
—Ç–∞–∫–∏–º —á–∏–Ω–æ–º —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à —Ç–µ–∫—Å—Çüí¨ —ñ–∑ —Å–∏–ª–∫–∏üîó –Ω–∞ —é—Ç—É–± –≤—ñ–¥–µ–æ. \n\
–¢–∞–∫–æ–∂ —Ç–∏ –º–æ–∂–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —Å–≤—ñ–π '—Ç–µ–ª–µ–≥—Ä–∞–º ID', –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø–∏—à–∏ —É —á–∞—Ç üëâ/idüëà \n\
–ö—Ä—É—Ç–æ –ø—Ä–∞–≤–¥–∞ –∂? üòÇüòÇ")
    os.system("CLS")


@bot.message_handler(content_types = ["text"])
def get_text_messages(message):

    text = message.text
    # print(text)

    if text[:23] == "https://www.youtube.com" or text[:13] == "https://youtu":

        try:

            video_src = module.download_youtube(text)
            video = open(video_src, "rb")
            bot.send_video(message.chat.id, video)

            # os.remove(video_src) # –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—É, –Ω–µ –ø—Ä–∞—Ü—é—ç —Ç–∞–∫ —è–∫ –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –¥–æ–≤–≥–æ –Ω–µ –∑–∞–≤–µ—Ä—à—É—ç—Ç—å—Å—è

        except:

            bot.send_message(message.from_user.id, "–©–æ—Å—å –Ω–µ —Ç–∞–∫ —ñ–∑ —Å–∏–ª–∫–æ—é :(, –Ω–µ –º–æ–∂—É –∑–Ω–∞–π—Ç–∏ —Ü—å–æ–≥–æ –≤—ñ–¥–µ–æ üò¢")

    elif text == "/id":

        bot.send_message(message.from_user.id, f"—Ç–≤–æ—î ID: '{message.from_user.id}'")

    else:

        try:

            if len(text) < 3:

                bot.send_message(message.from_user.id, "–Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–æ—Ç—à—ñ 3 —Å–∏–º–≤–æ–ª—ñ–≤ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é üò°üò°")

            else:

                next_massage = module.zapros(text)

                bot.send_message(message.from_user.id, next_massage)

        except:

            bot.send_message(message.from_user.id, "–Ω–µ –º–æ–∂—É –∑–Ω–∞–π—Ç–∏ –Ω—ñ—á–æ–≥–æ –ø–æ –≤–∞—à–æ–º—É –∑–∞–ø–∏—Ç—É üò¢üò¢")

    os.system("CLS")


@bot.message_handler(content_types = ["photo"])
def photo(message):

    try:

        fileID = message.photo[-1].file_id
        file_info = bot.get_file(fileID)
        downloaded_file = bot.download_file(file_info.file_path)

        with open(r"images/image.jpg", "wb") as new_file:
            new_file.write(downloaded_file)

        a = module.photo_to_text(r"images/image.jpg")
        bot.send_message(message.from_user.id, a)

    except TypeError:

        a = "üö¨üóø –ù–µ –±–∞—á—É —Ç–µ–∫—Å—Ç—É –Ω–∞ —Ü—å–æ–º—É —Ñ–æ—Ç–æ üëÄ"
        bot.send_message(message.from_user.id, a)

    os.system("CLS")


@bot.message_handler(content_types = ["voice"])
def voice_processing(message):

    file_info = bot.get_file(message.voice.file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    with open(r"audio/audio.ogg", "wb") as new_file:
        new_file.write(downloaded_file)

    try:

        a = module.output(r"audio/audio.ogg")

        bot.send_message(message.from_user.id, a)

    except:

        bot.send_message(message.from_user.id, "–ù–µ –º–æ–∂—É —Ä–æ–∑–ø—ñ–∑–Ω–∞—Ç–∏ —Ç–µ–∫—Å—Ç —É —Ü—å–æ–º—É –≥–æ–ª–æ—Å–æ–≤–æ–º—É üò¢")

    os.system("CLS")


@bot.message_handler(content_types = ["video"])
def send_text(message):

    file_info = bot.get_file(message.video.file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    with open(r"videos/user_video.mp4", "wb") as new_file:
        new_file.write(downloaded_file)

    markup_inline = types.InlineKeyboardMarkup()

    item_1 = types.InlineKeyboardButton(text="—Ñ–∞–π–ª .mp3", callback_data="mp3")
    item_2 = types.InlineKeyboardButton(text="–ì–æ–ª–æ—Å–æ–≤–µ", callback_data="gol")

    markup_inline.add(item_1, item_2)
    bot.send_message(message.from_user.id, "–Ø–∫–∏–º —Å–ø–æ—Å–æ–±–æ–º –≤–∞–º –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∞—É–¥—ñ–æ—Ñ–∞–π–ªüîä ?",
                    reply_markup=markup_inline
                    )

    #bot.send_voice(message.from_user.id, a)
    os.system("CLS")


@bot.message_handler(content_types = ["document"])
def hz(message):

    sti = open(r"images/blet.webp", "rb")
    bot.send_sticker(message.from_user.id, sti)

    bot.reply_to(message, "üö¨üóø \n–Ø –Ω–µ–∑–Ω–∞—é —â–æ —Ä–æ–±–∏—Ç–∏ —ñ–∑ —Ü–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏ üò¢ ... \n–Ñ —è–∫—ñ—Å—å –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó?? –Ω–∞–ø–∏—à–∏ –≤–ª–∞—Å–Ω–∏–∫—É üëâ@skiffiksüëà")

    os.system("CLS")


@bot.callback_query_handler(func = lambda call: True)
def answer(call):

    a = open(module.video_to_mp(r"videos/user_video.mp4"), "rb")

    if call.data == "mp3":

        bot.send_audio(call.from_user.id, a)

    elif call.data == "gol":

        bot.send_voice(call.from_user.id, a)

    os.system("CLS")


bot.polling(none_stop = True, interval = 0)